---

- name: Populate group_vars/all/dcos.yml from group_vars/all/dcos.yml.template
  hosts: bootstraps
  gather_facts: yes
  vars_files:
    - vault/credentials.yml
    - "environments/{{ env_name | default('default') }}/main.yml"
    - "profiles/{{ profile | default('default') }}/main.yml"
  tasks:
    - name: "Playbook configuration"
      debug:
        msg: 
          - "env_name = {{ env_name | default('default') }}"
          - "profile     = {{ profile | default('default') }}"
          - "ip_detect     = {{ ip_detect }}"

    - name: Populate local template file if it exists
      when: template_filename is exists
      delegate_to: localhost
      template:
        src: "{{ template_filename }}"
        dest: "{{ target_filename }}"
        variable_start_string: '[%' 
        variable_end_string:   '%]'
      vars:
        target_filename: "group_vars/all/dcos.yml"
        template_filename: "{{ target_filename }}.template"
    
    - name: "Check that the {{ target_filename }} exists"
      when: target_filename is not exists
      fail:
        msg: "Looks like you forgot to create: {{ target_filename }}"
      vars:
        target_filename: "group_vars/all/dcos.yml"
      
    - name: "Check if ansible-playbook.centos7-basic has been applied"
      when: ansible_local['ansible-playbook.centos7-basic'].playbook_build_version | version( '1905.1.0','>=' )
      fail:
        msg: "Looks like you forgot to deploy: ansible-playbook.centos7-basic"
      

- name: Wait for instances to become reachable
  hosts: all
  gather_facts: no
  vars_files:
    - vault/credentials.yml
    - "environments/{{ env_name | default('default') }}/main.yml"
    - "profiles/{{ profile | default('default') }}/main.yml"
  tasks:
    - name: Wait for instances to become reachable
      wait_for_connection:
        delay: 10
        sleep: 10
        timeout: 120

- name: Collect DC/OS versions used by updates
  gather_facts: yes
  hosts: dcos
  vars_files:
    - vault/credentials.yml
  tasks:
    - name: Collect DC/OS versions
      setup:

- name: DC/OS Requirements
  hosts: all
  become: true
  vars_files:
    - vault/credentials.yml
    - "environments/{{ env_name | default('default') }}/main.yml"
    - "profiles/{{ profile | default('default') }}/main.yml"
  tasks:
    - include_role:
        name: dcos_requirements
    - include_role:
        name: dcos_gpu

- name: "Setup and configure BOOTSTRAP nodes"
  hosts: bootstraps
  become: true
  vars_files:
    - vault/credentials.yml
    - "environments/{{ env_name | default('default') }}/main.yml"
    - "profiles/{{ profile | default('default') }}/main.yml"
  tasks:
    - include_role:
        name: dcos_bootstrap

- name: "Setup and configure MASTER nodes"
  hosts: masters
  serial: 1
  become: true
  vars_files:
    - vault/credentials.yml
    - "environments/{{ env_name | default('default') }}/main.yml"
    - "profiles/{{ profile | default('default') }}/main.yml"
  tasks:
    - include_role:
        name: dcos_master

- name: "Setup and configure AGENT nodes"
  hosts: agents
  become: true
  vars_files:
    - vault/credentials.yml
    - "environments/{{ env_name | default('default') }}/main.yml"
    - "profiles/{{ profile | default('default') }}/main.yml"
  tasks:
    - include_role:
        name: dcos_agent

- name: Do post deploy
  hosts: all
  become: true
  vars_files:
    - vault/credentials.yml
    - "environments/{{ env_name | default('default') }}/main.yml"
    - "profiles/{{ profile | default('default') }}/main.yml"
  tasks:
    - include_role:
        name: ansible-role.post-deploy
